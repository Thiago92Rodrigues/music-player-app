syntax = "proto3";

package proto;

service Musics {
    rpc GetMusic(Id) returns (Music) {}
    rpc CreateMusic(CreateMusicRequest) returns (Music) {}
    rpc UpdateMusic(UpdateMusicRequest) returns (Music) {}
    rpc DeleteMusic(Id) returns (Empty) {}

    rpc GetAlbum(Id) returns (Album) {}
    rpc CreateAlbum(CreateAlbumRequest) returns (Album) {}
    rpc UpdateAlbum(UpdateAlbumRequest) returns (Album) {}
    rpc DeleteAlbum(Id) returns (Empty) {}

    rpc GetArtist(Id) returns (Artist) {}
    rpc GetAllArtists(Empty) returns (ArtistList) {}
    rpc GetArtistByGenre(GetArtistByGenreRequest) returns (ArtistList) {}
    rpc CreateArtist(CreateArtistRequest) returns (Artist) {}
    rpc UpdateArtist(UpdateArtistRequest) returns (Artist) {}
    rpc DeleteArtist(Id) returns (Empty) {}
}

message Id {
    string Id = 1;
}

message Music {
    string id = 1;
    string title = 2;
    int32 durationInSeconds = 3;
    string file = 4;
    repeated string composers = 5;
    string lyrics = 6;
    string albumId = 7;
}

message CreateMusicRequest {
    string title = 1;
    int32 durationInSeconds = 2;
    string file = 3;
    repeated string composers = 4;
    string lyrics = 5;
    string albumId = 6;
}

message UpdateMusicRequest {
    string id = 1;
    string title = 2;
    int32 durationInSeconds = 3;
    string file = 4;
    repeated string composers = 5;
    string lyrics = 6;
    string albumId = 7;
}

message Album {
    string id = 1;
    string name = 2;
    int64 year = 3;
    string cover = 4;
    string studio = 5;
    repeated string producers = 6;
    string artistId = 7;
}

message CreateAlbumRequest {
    string name = 1;
    int64 year = 2;
    string cover = 3;
    string studio = 4;
    repeated string producers = 5;
    string artistId = 6;
}

message UpdateAlbumRequest {
    string id = 1;
    string name = 2;
    int64 year = 3;
    string cover = 4;
    string studio = 5;
    repeated string producers = 6;
    string artistId = 7;
}

message Artist {
    string id = 1;
    string name = 2;
    string description = 3;
    Genre genre = 4;
    repeated string photos = 5;
}

message ArtistList {
    repeated Artist artists = 1;
}

message GetArtistByGenreRequest {
    Genre genre = 1;
}

message CreateArtistRequest {
    string name = 1;
    string description = 2;
    Genre genre = 3;
    repeated string photos = 4;
}

message UpdateArtistRequest {
    string id = 1;
    string name = 2;
    string description = 3;
    Genre genre = 4;
    repeated string photos = 5;
}

enum Genre {
    Heavy_Metal = 0;
    Folk_Metal = 1;
    Power_Metal = 2;
    Death_Metal = 3;
    Thrash_Metal = 4;
    Black_Metal = 5;
}

message Empty {}
