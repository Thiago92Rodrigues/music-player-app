// source: musics_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.proto.Album', null, global);
goog.exportSymbol('proto.proto.AlbumsList', null, global);
goog.exportSymbol('proto.proto.Artist', null, global);
goog.exportSymbol('proto.proto.ArtistsList', null, global);
goog.exportSymbol('proto.proto.CreateAlbumRequest', null, global);
goog.exportSymbol('proto.proto.CreateArtistRequest', null, global);
goog.exportSymbol('proto.proto.CreateMusicRequest', null, global);
goog.exportSymbol('proto.proto.Empty', null, global);
goog.exportSymbol('proto.proto.Genre', null, global);
goog.exportSymbol('proto.proto.GetArtistByGenreRequest', null, global);
goog.exportSymbol('proto.proto.Id', null, global);
goog.exportSymbol('proto.proto.Music', null, global);
goog.exportSymbol('proto.proto.MusicsList', null, global);
goog.exportSymbol('proto.proto.UpdateAlbumRequest', null, global);
goog.exportSymbol('proto.proto.UpdateArtistRequest', null, global);
goog.exportSymbol('proto.proto.UpdateMusicRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Id = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Id, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Id.displayName = 'proto.proto.Id';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Music = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.Music.repeatedFields_, null);
};
goog.inherits(proto.proto.Music, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Music.displayName = 'proto.proto.Music';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.MusicsList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.MusicsList.repeatedFields_, null);
};
goog.inherits(proto.proto.MusicsList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.MusicsList.displayName = 'proto.proto.MusicsList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.CreateMusicRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.CreateMusicRequest.repeatedFields_, null);
};
goog.inherits(proto.proto.CreateMusicRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.CreateMusicRequest.displayName = 'proto.proto.CreateMusicRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.UpdateMusicRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.UpdateMusicRequest.repeatedFields_, null);
};
goog.inherits(proto.proto.UpdateMusicRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.UpdateMusicRequest.displayName = 'proto.proto.UpdateMusicRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Album = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.Album.repeatedFields_, null);
};
goog.inherits(proto.proto.Album, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Album.displayName = 'proto.proto.Album';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.AlbumsList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.AlbumsList.repeatedFields_, null);
};
goog.inherits(proto.proto.AlbumsList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.AlbumsList.displayName = 'proto.proto.AlbumsList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.CreateAlbumRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.CreateAlbumRequest.repeatedFields_, null);
};
goog.inherits(proto.proto.CreateAlbumRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.CreateAlbumRequest.displayName = 'proto.proto.CreateAlbumRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.UpdateAlbumRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.UpdateAlbumRequest.repeatedFields_, null);
};
goog.inherits(proto.proto.UpdateAlbumRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.UpdateAlbumRequest.displayName = 'proto.proto.UpdateAlbumRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Artist = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.Artist.repeatedFields_, null);
};
goog.inherits(proto.proto.Artist, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Artist.displayName = 'proto.proto.Artist';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ArtistsList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.ArtistsList.repeatedFields_, null);
};
goog.inherits(proto.proto.ArtistsList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.ArtistsList.displayName = 'proto.proto.ArtistsList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.GetArtistByGenreRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.GetArtistByGenreRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.GetArtistByGenreRequest.displayName = 'proto.proto.GetArtistByGenreRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.CreateArtistRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.CreateArtistRequest.repeatedFields_, null);
};
goog.inherits(proto.proto.CreateArtistRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.CreateArtistRequest.displayName = 'proto.proto.CreateArtistRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.UpdateArtistRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.UpdateArtistRequest.repeatedFields_, null);
};
goog.inherits(proto.proto.UpdateArtistRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.UpdateArtistRequest.displayName = 'proto.proto.UpdateArtistRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Empty.displayName = 'proto.proto.Empty';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Id.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Id.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Id} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Id.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Id}
 */
proto.proto.Id.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Id;
  return proto.proto.Id.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Id} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Id}
 */
proto.proto.Id.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Id.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Id.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Id} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Id.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.proto.Id.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Id} returns this
 */
proto.proto.Id.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.Music.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Music.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Music.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Music} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Music.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    durationinseconds: jspb.Message.getFieldWithDefault(msg, 3, 0),
    file: jspb.Message.getFieldWithDefault(msg, 4, ""),
    composersList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    lyrics: jspb.Message.getFieldWithDefault(msg, 6, ""),
    albumid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    artistid: jspb.Message.getFieldWithDefault(msg, 8, ""),
    views: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Music}
 */
proto.proto.Music.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Music;
  return proto.proto.Music.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Music} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Music}
 */
proto.proto.Music.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationinseconds(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFile(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addComposers(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLyrics(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlbumid(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setArtistid(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setViews(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Music.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Music.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Music} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Music.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDurationinseconds();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFile();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getComposersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getLyrics();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAlbumid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getArtistid();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getViews();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.proto.Music.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Music} returns this
 */
proto.proto.Music.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.proto.Music.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Music} returns this
 */
proto.proto.Music.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 durationInSeconds = 3;
 * @return {number}
 */
proto.proto.Music.prototype.getDurationinseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Music} returns this
 */
proto.proto.Music.prototype.setDurationinseconds = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string file = 4;
 * @return {string}
 */
proto.proto.Music.prototype.getFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Music} returns this
 */
proto.proto.Music.prototype.setFile = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string composers = 5;
 * @return {!Array<string>}
 */
proto.proto.Music.prototype.getComposersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.Music} returns this
 */
proto.proto.Music.prototype.setComposersList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.Music} returns this
 */
proto.proto.Music.prototype.addComposers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Music} returns this
 */
proto.proto.Music.prototype.clearComposersList = function() {
  return this.setComposersList([]);
};


/**
 * optional string lyrics = 6;
 * @return {string}
 */
proto.proto.Music.prototype.getLyrics = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Music} returns this
 */
proto.proto.Music.prototype.setLyrics = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string albumId = 7;
 * @return {string}
 */
proto.proto.Music.prototype.getAlbumid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Music} returns this
 */
proto.proto.Music.prototype.setAlbumid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string artistId = 8;
 * @return {string}
 */
proto.proto.Music.prototype.getArtistid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Music} returns this
 */
proto.proto.Music.prototype.setArtistid = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int32 views = 9;
 * @return {number}
 */
proto.proto.Music.prototype.getViews = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Music} returns this
 */
proto.proto.Music.prototype.setViews = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.MusicsList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.MusicsList.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.MusicsList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.MusicsList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.MusicsList.toObject = function(includeInstance, msg) {
  var f, obj = {
    musicsList: jspb.Message.toObjectList(msg.getMusicsList(),
    proto.proto.Music.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.MusicsList}
 */
proto.proto.MusicsList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.MusicsList;
  return proto.proto.MusicsList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.MusicsList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.MusicsList}
 */
proto.proto.MusicsList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.Music;
      reader.readMessage(value,proto.proto.Music.deserializeBinaryFromReader);
      msg.addMusics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.MusicsList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.MusicsList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.MusicsList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.MusicsList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMusicsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.Music.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Music musics = 1;
 * @return {!Array<!proto.proto.Music>}
 */
proto.proto.MusicsList.prototype.getMusicsList = function() {
  return /** @type{!Array<!proto.proto.Music>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Music, 1));
};


/**
 * @param {!Array<!proto.proto.Music>} value
 * @return {!proto.proto.MusicsList} returns this
*/
proto.proto.MusicsList.prototype.setMusicsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.Music=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Music}
 */
proto.proto.MusicsList.prototype.addMusics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.Music, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.MusicsList} returns this
 */
proto.proto.MusicsList.prototype.clearMusicsList = function() {
  return this.setMusicsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.CreateMusicRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.CreateMusicRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.CreateMusicRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.CreateMusicRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CreateMusicRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    durationinseconds: jspb.Message.getFieldWithDefault(msg, 2, 0),
    file: jspb.Message.getFieldWithDefault(msg, 3, ""),
    composersList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    lyrics: jspb.Message.getFieldWithDefault(msg, 5, ""),
    albumid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    artistid: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.CreateMusicRequest}
 */
proto.proto.CreateMusicRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.CreateMusicRequest;
  return proto.proto.CreateMusicRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.CreateMusicRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.CreateMusicRequest}
 */
proto.proto.CreateMusicRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationinseconds(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFile(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addComposers(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLyrics(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlbumid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setArtistid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.CreateMusicRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.CreateMusicRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.CreateMusicRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CreateMusicRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDurationinseconds();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFile();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getComposersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getLyrics();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAlbumid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getArtistid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.proto.CreateMusicRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CreateMusicRequest} returns this
 */
proto.proto.CreateMusicRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 durationInSeconds = 2;
 * @return {number}
 */
proto.proto.CreateMusicRequest.prototype.getDurationinseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.CreateMusicRequest} returns this
 */
proto.proto.CreateMusicRequest.prototype.setDurationinseconds = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string file = 3;
 * @return {string}
 */
proto.proto.CreateMusicRequest.prototype.getFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CreateMusicRequest} returns this
 */
proto.proto.CreateMusicRequest.prototype.setFile = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string composers = 4;
 * @return {!Array<string>}
 */
proto.proto.CreateMusicRequest.prototype.getComposersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.CreateMusicRequest} returns this
 */
proto.proto.CreateMusicRequest.prototype.setComposersList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.CreateMusicRequest} returns this
 */
proto.proto.CreateMusicRequest.prototype.addComposers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.CreateMusicRequest} returns this
 */
proto.proto.CreateMusicRequest.prototype.clearComposersList = function() {
  return this.setComposersList([]);
};


/**
 * optional string lyrics = 5;
 * @return {string}
 */
proto.proto.CreateMusicRequest.prototype.getLyrics = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CreateMusicRequest} returns this
 */
proto.proto.CreateMusicRequest.prototype.setLyrics = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string albumId = 6;
 * @return {string}
 */
proto.proto.CreateMusicRequest.prototype.getAlbumid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CreateMusicRequest} returns this
 */
proto.proto.CreateMusicRequest.prototype.setAlbumid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string artistId = 7;
 * @return {string}
 */
proto.proto.CreateMusicRequest.prototype.getArtistid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CreateMusicRequest} returns this
 */
proto.proto.CreateMusicRequest.prototype.setArtistid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.UpdateMusicRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.UpdateMusicRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.UpdateMusicRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.UpdateMusicRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UpdateMusicRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    durationinseconds: jspb.Message.getFieldWithDefault(msg, 3, 0),
    file: jspb.Message.getFieldWithDefault(msg, 4, ""),
    composersList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    lyrics: jspb.Message.getFieldWithDefault(msg, 6, ""),
    albumid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    artistid: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.UpdateMusicRequest}
 */
proto.proto.UpdateMusicRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.UpdateMusicRequest;
  return proto.proto.UpdateMusicRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.UpdateMusicRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.UpdateMusicRequest}
 */
proto.proto.UpdateMusicRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationinseconds(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFile(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addComposers(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLyrics(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlbumid(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setArtistid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.UpdateMusicRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.UpdateMusicRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.UpdateMusicRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UpdateMusicRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDurationinseconds();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFile();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getComposersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getLyrics();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAlbumid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getArtistid();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.proto.UpdateMusicRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateMusicRequest} returns this
 */
proto.proto.UpdateMusicRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.proto.UpdateMusicRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateMusicRequest} returns this
 */
proto.proto.UpdateMusicRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 durationInSeconds = 3;
 * @return {number}
 */
proto.proto.UpdateMusicRequest.prototype.getDurationinseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UpdateMusicRequest} returns this
 */
proto.proto.UpdateMusicRequest.prototype.setDurationinseconds = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string file = 4;
 * @return {string}
 */
proto.proto.UpdateMusicRequest.prototype.getFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateMusicRequest} returns this
 */
proto.proto.UpdateMusicRequest.prototype.setFile = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string composers = 5;
 * @return {!Array<string>}
 */
proto.proto.UpdateMusicRequest.prototype.getComposersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.UpdateMusicRequest} returns this
 */
proto.proto.UpdateMusicRequest.prototype.setComposersList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.UpdateMusicRequest} returns this
 */
proto.proto.UpdateMusicRequest.prototype.addComposers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.UpdateMusicRequest} returns this
 */
proto.proto.UpdateMusicRequest.prototype.clearComposersList = function() {
  return this.setComposersList([]);
};


/**
 * optional string lyrics = 6;
 * @return {string}
 */
proto.proto.UpdateMusicRequest.prototype.getLyrics = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateMusicRequest} returns this
 */
proto.proto.UpdateMusicRequest.prototype.setLyrics = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string albumId = 7;
 * @return {string}
 */
proto.proto.UpdateMusicRequest.prototype.getAlbumid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateMusicRequest} returns this
 */
proto.proto.UpdateMusicRequest.prototype.setAlbumid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string artistId = 8;
 * @return {string}
 */
proto.proto.UpdateMusicRequest.prototype.getArtistid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateMusicRequest} returns this
 */
proto.proto.UpdateMusicRequest.prototype.setArtistid = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.Album.repeatedFields_ = [6,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Album.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Album.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Album} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Album.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    releasedate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    cover: jspb.Message.getFieldWithDefault(msg, 4, ""),
    studio: jspb.Message.getFieldWithDefault(msg, 5, ""),
    producersList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    artistid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    tracksList: jspb.Message.toObjectList(msg.getTracksList(),
    proto.proto.Music.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Album}
 */
proto.proto.Album.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Album;
  return proto.proto.Album.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Album} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Album}
 */
proto.proto.Album.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReleasedate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCover(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStudio(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addProducers(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setArtistid(value);
      break;
    case 8:
      var value = new proto.proto.Music;
      reader.readMessage(value,proto.proto.Music.deserializeBinaryFromReader);
      msg.addTracks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Album.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Album.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Album} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Album.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReleasedate();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCover();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStudio();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getProducersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getArtistid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTracksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.proto.Music.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.proto.Album.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Album} returns this
 */
proto.proto.Album.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.proto.Album.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Album} returns this
 */
proto.proto.Album.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 releaseDate = 3;
 * @return {number}
 */
proto.proto.Album.prototype.getReleasedate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Album} returns this
 */
proto.proto.Album.prototype.setReleasedate = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string cover = 4;
 * @return {string}
 */
proto.proto.Album.prototype.getCover = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Album} returns this
 */
proto.proto.Album.prototype.setCover = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string studio = 5;
 * @return {string}
 */
proto.proto.Album.prototype.getStudio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Album} returns this
 */
proto.proto.Album.prototype.setStudio = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated string producers = 6;
 * @return {!Array<string>}
 */
proto.proto.Album.prototype.getProducersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.Album} returns this
 */
proto.proto.Album.prototype.setProducersList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.Album} returns this
 */
proto.proto.Album.prototype.addProducers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Album} returns this
 */
proto.proto.Album.prototype.clearProducersList = function() {
  return this.setProducersList([]);
};


/**
 * optional string artistId = 7;
 * @return {string}
 */
proto.proto.Album.prototype.getArtistid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Album} returns this
 */
proto.proto.Album.prototype.setArtistid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated Music tracks = 8;
 * @return {!Array<!proto.proto.Music>}
 */
proto.proto.Album.prototype.getTracksList = function() {
  return /** @type{!Array<!proto.proto.Music>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Music, 8));
};


/**
 * @param {!Array<!proto.proto.Music>} value
 * @return {!proto.proto.Album} returns this
*/
proto.proto.Album.prototype.setTracksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.proto.Music=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Music}
 */
proto.proto.Album.prototype.addTracks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.proto.Music, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Album} returns this
 */
proto.proto.Album.prototype.clearTracksList = function() {
  return this.setTracksList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.AlbumsList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.AlbumsList.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.AlbumsList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.AlbumsList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AlbumsList.toObject = function(includeInstance, msg) {
  var f, obj = {
    albumsList: jspb.Message.toObjectList(msg.getAlbumsList(),
    proto.proto.Album.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.AlbumsList}
 */
proto.proto.AlbumsList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.AlbumsList;
  return proto.proto.AlbumsList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.AlbumsList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.AlbumsList}
 */
proto.proto.AlbumsList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.Album;
      reader.readMessage(value,proto.proto.Album.deserializeBinaryFromReader);
      msg.addAlbums(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.AlbumsList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.AlbumsList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.AlbumsList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AlbumsList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAlbumsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.Album.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Album albums = 1;
 * @return {!Array<!proto.proto.Album>}
 */
proto.proto.AlbumsList.prototype.getAlbumsList = function() {
  return /** @type{!Array<!proto.proto.Album>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Album, 1));
};


/**
 * @param {!Array<!proto.proto.Album>} value
 * @return {!proto.proto.AlbumsList} returns this
*/
proto.proto.AlbumsList.prototype.setAlbumsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.Album=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Album}
 */
proto.proto.AlbumsList.prototype.addAlbums = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.Album, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.AlbumsList} returns this
 */
proto.proto.AlbumsList.prototype.clearAlbumsList = function() {
  return this.setAlbumsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.CreateAlbumRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.CreateAlbumRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.CreateAlbumRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.CreateAlbumRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CreateAlbumRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    releasedate: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cover: jspb.Message.getFieldWithDefault(msg, 3, ""),
    studio: jspb.Message.getFieldWithDefault(msg, 4, ""),
    producersList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    artistid: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.CreateAlbumRequest}
 */
proto.proto.CreateAlbumRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.CreateAlbumRequest;
  return proto.proto.CreateAlbumRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.CreateAlbumRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.CreateAlbumRequest}
 */
proto.proto.CreateAlbumRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReleasedate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCover(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStudio(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addProducers(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setArtistid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.CreateAlbumRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.CreateAlbumRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.CreateAlbumRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CreateAlbumRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReleasedate();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getCover();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStudio();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProducersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getArtistid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.proto.CreateAlbumRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CreateAlbumRequest} returns this
 */
proto.proto.CreateAlbumRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 releaseDate = 2;
 * @return {number}
 */
proto.proto.CreateAlbumRequest.prototype.getReleasedate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.CreateAlbumRequest} returns this
 */
proto.proto.CreateAlbumRequest.prototype.setReleasedate = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string cover = 3;
 * @return {string}
 */
proto.proto.CreateAlbumRequest.prototype.getCover = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CreateAlbumRequest} returns this
 */
proto.proto.CreateAlbumRequest.prototype.setCover = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string studio = 4;
 * @return {string}
 */
proto.proto.CreateAlbumRequest.prototype.getStudio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CreateAlbumRequest} returns this
 */
proto.proto.CreateAlbumRequest.prototype.setStudio = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string producers = 5;
 * @return {!Array<string>}
 */
proto.proto.CreateAlbumRequest.prototype.getProducersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.CreateAlbumRequest} returns this
 */
proto.proto.CreateAlbumRequest.prototype.setProducersList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.CreateAlbumRequest} returns this
 */
proto.proto.CreateAlbumRequest.prototype.addProducers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.CreateAlbumRequest} returns this
 */
proto.proto.CreateAlbumRequest.prototype.clearProducersList = function() {
  return this.setProducersList([]);
};


/**
 * optional string artistId = 6;
 * @return {string}
 */
proto.proto.CreateAlbumRequest.prototype.getArtistid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CreateAlbumRequest} returns this
 */
proto.proto.CreateAlbumRequest.prototype.setArtistid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.UpdateAlbumRequest.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.UpdateAlbumRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.UpdateAlbumRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.UpdateAlbumRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UpdateAlbumRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    releasedate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    cover: jspb.Message.getFieldWithDefault(msg, 4, ""),
    studio: jspb.Message.getFieldWithDefault(msg, 5, ""),
    producersList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    artistid: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.UpdateAlbumRequest}
 */
proto.proto.UpdateAlbumRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.UpdateAlbumRequest;
  return proto.proto.UpdateAlbumRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.UpdateAlbumRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.UpdateAlbumRequest}
 */
proto.proto.UpdateAlbumRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReleasedate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCover(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStudio(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addProducers(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setArtistid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.UpdateAlbumRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.UpdateAlbumRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.UpdateAlbumRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UpdateAlbumRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReleasedate();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCover();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStudio();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getProducersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getArtistid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.proto.UpdateAlbumRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateAlbumRequest} returns this
 */
proto.proto.UpdateAlbumRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.proto.UpdateAlbumRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateAlbumRequest} returns this
 */
proto.proto.UpdateAlbumRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 releaseDate = 3;
 * @return {number}
 */
proto.proto.UpdateAlbumRequest.prototype.getReleasedate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UpdateAlbumRequest} returns this
 */
proto.proto.UpdateAlbumRequest.prototype.setReleasedate = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string cover = 4;
 * @return {string}
 */
proto.proto.UpdateAlbumRequest.prototype.getCover = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateAlbumRequest} returns this
 */
proto.proto.UpdateAlbumRequest.prototype.setCover = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string studio = 5;
 * @return {string}
 */
proto.proto.UpdateAlbumRequest.prototype.getStudio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateAlbumRequest} returns this
 */
proto.proto.UpdateAlbumRequest.prototype.setStudio = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated string producers = 6;
 * @return {!Array<string>}
 */
proto.proto.UpdateAlbumRequest.prototype.getProducersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.UpdateAlbumRequest} returns this
 */
proto.proto.UpdateAlbumRequest.prototype.setProducersList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.UpdateAlbumRequest} returns this
 */
proto.proto.UpdateAlbumRequest.prototype.addProducers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.UpdateAlbumRequest} returns this
 */
proto.proto.UpdateAlbumRequest.prototype.clearProducersList = function() {
  return this.setProducersList([]);
};


/**
 * optional string artistId = 7;
 * @return {string}
 */
proto.proto.UpdateAlbumRequest.prototype.getArtistid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateAlbumRequest} returns this
 */
proto.proto.UpdateAlbumRequest.prototype.setArtistid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.Artist.repeatedFields_ = [5,8,16,17];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Artist.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Artist.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Artist} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Artist.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    country: jspb.Message.getFieldWithDefault(msg, 3, ""),
    foundationdate: jspb.Message.getFieldWithDefault(msg, 4, 0),
    membersList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    genre: jspb.Message.getFieldWithDefault(msg, 7, 0),
    photosList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    facebookurl: jspb.Message.getFieldWithDefault(msg, 9, ""),
    twitterurl: jspb.Message.getFieldWithDefault(msg, 10, ""),
    instagramurl: jspb.Message.getFieldWithDefault(msg, 11, ""),
    wikipediaurl: jspb.Message.getFieldWithDefault(msg, 12, ""),
    font: jspb.Message.getFieldWithDefault(msg, 13, ""),
    favorites: jspb.Message.getFieldWithDefault(msg, 14, 0),
    followers: jspb.Message.getFieldWithDefault(msg, 15, 0),
    albumsList: jspb.Message.toObjectList(msg.getAlbumsList(),
    proto.proto.Album.toObject, includeInstance),
    populartracksList: jspb.Message.toObjectList(msg.getPopulartracksList(),
    proto.proto.Music.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Artist}
 */
proto.proto.Artist.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Artist;
  return proto.proto.Artist.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Artist} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Artist}
 */
proto.proto.Artist.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFoundationdate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addMembers(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {!proto.proto.Genre} */ (reader.readEnum());
      msg.setGenre(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addPhotos(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFacebookurl(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTwitterurl(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstagramurl(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setWikipediaurl(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setFont(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFavorites(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFollowers(value);
      break;
    case 16:
      var value = new proto.proto.Album;
      reader.readMessage(value,proto.proto.Album.deserializeBinaryFromReader);
      msg.addAlbums(value);
      break;
    case 17:
      var value = new proto.proto.Music;
      reader.readMessage(value,proto.proto.Music.deserializeBinaryFromReader);
      msg.addPopulartracks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Artist.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Artist.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Artist} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Artist.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFoundationdate();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getMembersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getGenre();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getPhotosList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getFacebookurl();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTwitterurl();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getInstagramurl();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getWikipediaurl();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getFont();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getFavorites();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getFollowers();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getAlbumsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.proto.Album.serializeBinaryToWriter
    );
  }
  f = message.getPopulartracksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      proto.proto.Music.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.proto.Artist.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.proto.Artist.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string country = 3;
 * @return {string}
 */
proto.proto.Artist.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 foundationDate = 4;
 * @return {number}
 */
proto.proto.Artist.prototype.getFoundationdate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.setFoundationdate = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated string members = 5;
 * @return {!Array<string>}
 */
proto.proto.Artist.prototype.getMembersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.setMembersList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.addMembers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.clearMembersList = function() {
  return this.setMembersList([]);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.proto.Artist.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional Genre genre = 7;
 * @return {!proto.proto.Genre}
 */
proto.proto.Artist.prototype.getGenre = function() {
  return /** @type {!proto.proto.Genre} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.proto.Genre} value
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.setGenre = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * repeated string photos = 8;
 * @return {!Array<string>}
 */
proto.proto.Artist.prototype.getPhotosList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.setPhotosList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.addPhotos = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.clearPhotosList = function() {
  return this.setPhotosList([]);
};


/**
 * optional string facebookUrl = 9;
 * @return {string}
 */
proto.proto.Artist.prototype.getFacebookurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.setFacebookurl = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string twitterUrl = 10;
 * @return {string}
 */
proto.proto.Artist.prototype.getTwitterurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.setTwitterurl = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string instagramUrl = 11;
 * @return {string}
 */
proto.proto.Artist.prototype.getInstagramurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.setInstagramurl = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string wikipediaUrl = 12;
 * @return {string}
 */
proto.proto.Artist.prototype.getWikipediaurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.setWikipediaurl = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string font = 13;
 * @return {string}
 */
proto.proto.Artist.prototype.getFont = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.setFont = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional int32 favorites = 14;
 * @return {number}
 */
proto.proto.Artist.prototype.getFavorites = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.setFavorites = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 followers = 15;
 * @return {number}
 */
proto.proto.Artist.prototype.getFollowers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.setFollowers = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * repeated Album albums = 16;
 * @return {!Array<!proto.proto.Album>}
 */
proto.proto.Artist.prototype.getAlbumsList = function() {
  return /** @type{!Array<!proto.proto.Album>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Album, 16));
};


/**
 * @param {!Array<!proto.proto.Album>} value
 * @return {!proto.proto.Artist} returns this
*/
proto.proto.Artist.prototype.setAlbumsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.proto.Album=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Album}
 */
proto.proto.Artist.prototype.addAlbums = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.proto.Album, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.clearAlbumsList = function() {
  return this.setAlbumsList([]);
};


/**
 * repeated Music popularTracks = 17;
 * @return {!Array<!proto.proto.Music>}
 */
proto.proto.Artist.prototype.getPopulartracksList = function() {
  return /** @type{!Array<!proto.proto.Music>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Music, 17));
};


/**
 * @param {!Array<!proto.proto.Music>} value
 * @return {!proto.proto.Artist} returns this
*/
proto.proto.Artist.prototype.setPopulartracksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.proto.Music=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Music}
 */
proto.proto.Artist.prototype.addPopulartracks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.proto.Music, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Artist} returns this
 */
proto.proto.Artist.prototype.clearPopulartracksList = function() {
  return this.setPopulartracksList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.ArtistsList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ArtistsList.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ArtistsList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ArtistsList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ArtistsList.toObject = function(includeInstance, msg) {
  var f, obj = {
    artistsList: jspb.Message.toObjectList(msg.getArtistsList(),
    proto.proto.Artist.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ArtistsList}
 */
proto.proto.ArtistsList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ArtistsList;
  return proto.proto.ArtistsList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ArtistsList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ArtistsList}
 */
proto.proto.ArtistsList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.Artist;
      reader.readMessage(value,proto.proto.Artist.deserializeBinaryFromReader);
      msg.addArtists(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ArtistsList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ArtistsList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ArtistsList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ArtistsList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArtistsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.Artist.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Artist artists = 1;
 * @return {!Array<!proto.proto.Artist>}
 */
proto.proto.ArtistsList.prototype.getArtistsList = function() {
  return /** @type{!Array<!proto.proto.Artist>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Artist, 1));
};


/**
 * @param {!Array<!proto.proto.Artist>} value
 * @return {!proto.proto.ArtistsList} returns this
*/
proto.proto.ArtistsList.prototype.setArtistsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.Artist=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Artist}
 */
proto.proto.ArtistsList.prototype.addArtists = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.Artist, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.ArtistsList} returns this
 */
proto.proto.ArtistsList.prototype.clearArtistsList = function() {
  return this.setArtistsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.GetArtistByGenreRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.GetArtistByGenreRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.GetArtistByGenreRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.GetArtistByGenreRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    genre: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.GetArtistByGenreRequest}
 */
proto.proto.GetArtistByGenreRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.GetArtistByGenreRequest;
  return proto.proto.GetArtistByGenreRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.GetArtistByGenreRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.GetArtistByGenreRequest}
 */
proto.proto.GetArtistByGenreRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.proto.Genre} */ (reader.readEnum());
      msg.setGenre(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.GetArtistByGenreRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.GetArtistByGenreRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.GetArtistByGenreRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.GetArtistByGenreRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGenre();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional Genre genre = 1;
 * @return {!proto.proto.Genre}
 */
proto.proto.GetArtistByGenreRequest.prototype.getGenre = function() {
  return /** @type {!proto.proto.Genre} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.proto.Genre} value
 * @return {!proto.proto.GetArtistByGenreRequest} returns this
 */
proto.proto.GetArtistByGenreRequest.prototype.setGenre = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.CreateArtistRequest.repeatedFields_ = [4,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.CreateArtistRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.CreateArtistRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.CreateArtistRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CreateArtistRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    country: jspb.Message.getFieldWithDefault(msg, 2, ""),
    foundationdate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    membersList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    genre: jspb.Message.getFieldWithDefault(msg, 6, 0),
    photosList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    facebookurl: jspb.Message.getFieldWithDefault(msg, 8, ""),
    twitterurl: jspb.Message.getFieldWithDefault(msg, 9, ""),
    instagramurl: jspb.Message.getFieldWithDefault(msg, 10, ""),
    wikipediaurl: jspb.Message.getFieldWithDefault(msg, 11, ""),
    font: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.CreateArtistRequest}
 */
proto.proto.CreateArtistRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.CreateArtistRequest;
  return proto.proto.CreateArtistRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.CreateArtistRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.CreateArtistRequest}
 */
proto.proto.CreateArtistRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFoundationdate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addMembers(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {!proto.proto.Genre} */ (reader.readEnum());
      msg.setGenre(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addPhotos(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setFacebookurl(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTwitterurl(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstagramurl(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setWikipediaurl(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setFont(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.CreateArtistRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.CreateArtistRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.CreateArtistRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CreateArtistRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFoundationdate();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getMembersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGenre();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getPhotosList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getFacebookurl();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTwitterurl();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getInstagramurl();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getWikipediaurl();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getFont();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.proto.CreateArtistRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CreateArtistRequest} returns this
 */
proto.proto.CreateArtistRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string country = 2;
 * @return {string}
 */
proto.proto.CreateArtistRequest.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CreateArtistRequest} returns this
 */
proto.proto.CreateArtistRequest.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 foundationDate = 3;
 * @return {number}
 */
proto.proto.CreateArtistRequest.prototype.getFoundationdate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.CreateArtistRequest} returns this
 */
proto.proto.CreateArtistRequest.prototype.setFoundationdate = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated string members = 4;
 * @return {!Array<string>}
 */
proto.proto.CreateArtistRequest.prototype.getMembersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.CreateArtistRequest} returns this
 */
proto.proto.CreateArtistRequest.prototype.setMembersList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.CreateArtistRequest} returns this
 */
proto.proto.CreateArtistRequest.prototype.addMembers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.CreateArtistRequest} returns this
 */
proto.proto.CreateArtistRequest.prototype.clearMembersList = function() {
  return this.setMembersList([]);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.proto.CreateArtistRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CreateArtistRequest} returns this
 */
proto.proto.CreateArtistRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Genre genre = 6;
 * @return {!proto.proto.Genre}
 */
proto.proto.CreateArtistRequest.prototype.getGenre = function() {
  return /** @type {!proto.proto.Genre} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.proto.Genre} value
 * @return {!proto.proto.CreateArtistRequest} returns this
 */
proto.proto.CreateArtistRequest.prototype.setGenre = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * repeated string photos = 7;
 * @return {!Array<string>}
 */
proto.proto.CreateArtistRequest.prototype.getPhotosList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.CreateArtistRequest} returns this
 */
proto.proto.CreateArtistRequest.prototype.setPhotosList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.CreateArtistRequest} returns this
 */
proto.proto.CreateArtistRequest.prototype.addPhotos = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.CreateArtistRequest} returns this
 */
proto.proto.CreateArtistRequest.prototype.clearPhotosList = function() {
  return this.setPhotosList([]);
};


/**
 * optional string facebookUrl = 8;
 * @return {string}
 */
proto.proto.CreateArtistRequest.prototype.getFacebookurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CreateArtistRequest} returns this
 */
proto.proto.CreateArtistRequest.prototype.setFacebookurl = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string twitterUrl = 9;
 * @return {string}
 */
proto.proto.CreateArtistRequest.prototype.getTwitterurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CreateArtistRequest} returns this
 */
proto.proto.CreateArtistRequest.prototype.setTwitterurl = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string instagramUrl = 10;
 * @return {string}
 */
proto.proto.CreateArtistRequest.prototype.getInstagramurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CreateArtistRequest} returns this
 */
proto.proto.CreateArtistRequest.prototype.setInstagramurl = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string wikipediaUrl = 11;
 * @return {string}
 */
proto.proto.CreateArtistRequest.prototype.getWikipediaurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CreateArtistRequest} returns this
 */
proto.proto.CreateArtistRequest.prototype.setWikipediaurl = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string font = 12;
 * @return {string}
 */
proto.proto.CreateArtistRequest.prototype.getFont = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CreateArtistRequest} returns this
 */
proto.proto.CreateArtistRequest.prototype.setFont = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.UpdateArtistRequest.repeatedFields_ = [5,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.UpdateArtistRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.UpdateArtistRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.UpdateArtistRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UpdateArtistRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    country: jspb.Message.getFieldWithDefault(msg, 3, ""),
    foundationdate: jspb.Message.getFieldWithDefault(msg, 4, 0),
    membersList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    genre: jspb.Message.getFieldWithDefault(msg, 7, 0),
    photosList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    facebookurl: jspb.Message.getFieldWithDefault(msg, 9, ""),
    twitterurl: jspb.Message.getFieldWithDefault(msg, 10, ""),
    instagramurl: jspb.Message.getFieldWithDefault(msg, 11, ""),
    wikipediaurl: jspb.Message.getFieldWithDefault(msg, 12, ""),
    font: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.UpdateArtistRequest}
 */
proto.proto.UpdateArtistRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.UpdateArtistRequest;
  return proto.proto.UpdateArtistRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.UpdateArtistRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.UpdateArtistRequest}
 */
proto.proto.UpdateArtistRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFoundationdate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addMembers(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {!proto.proto.Genre} */ (reader.readEnum());
      msg.setGenre(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addPhotos(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFacebookurl(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTwitterurl(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstagramurl(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setWikipediaurl(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setFont(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.UpdateArtistRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.UpdateArtistRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.UpdateArtistRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UpdateArtistRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFoundationdate();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getMembersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getGenre();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getPhotosList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getFacebookurl();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTwitterurl();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getInstagramurl();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getWikipediaurl();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getFont();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.proto.UpdateArtistRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateArtistRequest} returns this
 */
proto.proto.UpdateArtistRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.proto.UpdateArtistRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateArtistRequest} returns this
 */
proto.proto.UpdateArtistRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string country = 3;
 * @return {string}
 */
proto.proto.UpdateArtistRequest.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateArtistRequest} returns this
 */
proto.proto.UpdateArtistRequest.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 foundationDate = 4;
 * @return {number}
 */
proto.proto.UpdateArtistRequest.prototype.getFoundationdate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UpdateArtistRequest} returns this
 */
proto.proto.UpdateArtistRequest.prototype.setFoundationdate = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated string members = 5;
 * @return {!Array<string>}
 */
proto.proto.UpdateArtistRequest.prototype.getMembersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.UpdateArtistRequest} returns this
 */
proto.proto.UpdateArtistRequest.prototype.setMembersList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.UpdateArtistRequest} returns this
 */
proto.proto.UpdateArtistRequest.prototype.addMembers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.UpdateArtistRequest} returns this
 */
proto.proto.UpdateArtistRequest.prototype.clearMembersList = function() {
  return this.setMembersList([]);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.proto.UpdateArtistRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateArtistRequest} returns this
 */
proto.proto.UpdateArtistRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional Genre genre = 7;
 * @return {!proto.proto.Genre}
 */
proto.proto.UpdateArtistRequest.prototype.getGenre = function() {
  return /** @type {!proto.proto.Genre} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.proto.Genre} value
 * @return {!proto.proto.UpdateArtistRequest} returns this
 */
proto.proto.UpdateArtistRequest.prototype.setGenre = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * repeated string photos = 8;
 * @return {!Array<string>}
 */
proto.proto.UpdateArtistRequest.prototype.getPhotosList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.UpdateArtistRequest} returns this
 */
proto.proto.UpdateArtistRequest.prototype.setPhotosList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.UpdateArtistRequest} returns this
 */
proto.proto.UpdateArtistRequest.prototype.addPhotos = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.UpdateArtistRequest} returns this
 */
proto.proto.UpdateArtistRequest.prototype.clearPhotosList = function() {
  return this.setPhotosList([]);
};


/**
 * optional string facebookUrl = 9;
 * @return {string}
 */
proto.proto.UpdateArtistRequest.prototype.getFacebookurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateArtistRequest} returns this
 */
proto.proto.UpdateArtistRequest.prototype.setFacebookurl = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string twitterUrl = 10;
 * @return {string}
 */
proto.proto.UpdateArtistRequest.prototype.getTwitterurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateArtistRequest} returns this
 */
proto.proto.UpdateArtistRequest.prototype.setTwitterurl = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string instagramUrl = 11;
 * @return {string}
 */
proto.proto.UpdateArtistRequest.prototype.getInstagramurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateArtistRequest} returns this
 */
proto.proto.UpdateArtistRequest.prototype.setInstagramurl = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string wikipediaUrl = 12;
 * @return {string}
 */
proto.proto.UpdateArtistRequest.prototype.getWikipediaurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateArtistRequest} returns this
 */
proto.proto.UpdateArtistRequest.prototype.setWikipediaurl = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string font = 13;
 * @return {string}
 */
proto.proto.UpdateArtistRequest.prototype.getFont = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateArtistRequest} returns this
 */
proto.proto.UpdateArtistRequest.prototype.setFont = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Empty}
 */
proto.proto.Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Empty;
  return proto.proto.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Empty}
 */
proto.proto.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.proto.Genre = {
  HEAVY_METAL: 0,
  FOLK_METAL: 1,
  POWER_METAL: 2,
  DEATH_METAL: 3,
  THRASH_METAL: 4,
  BLACK_METAL: 5
};

goog.object.extend(exports, proto.proto);
