syntax = "proto3";

package proto;
option go_package = "grpc/proto";

service Musics {
    rpc GetMusic(Id) returns (Music) {}
    rpc GetMusics(Empty) returns (MusicsList) {}
    rpc CreateMusic(CreateMusicRequest) returns (Music) {}
    rpc UpdateMusic(UpdateMusicRequest) returns (Music) {}
    rpc DeleteMusic(Id) returns (Empty) {}
    rpc ViewMusic(Id) returns (Music) {}

    rpc GetAlbum(Id) returns (Album) {}
    rpc GetAlbums(Empty) returns (AlbumsList) {}
    rpc CreateAlbum(CreateAlbumRequest) returns (Album) {}
    rpc UpdateAlbum(UpdateAlbumRequest) returns (Album) {}
    rpc DeleteAlbum(Id) returns (Empty) {}

    rpc GetArtist(Id) returns (Artist) {}
    rpc GetArtists(Empty) returns (ArtistsList) {}
    rpc GetArtistByGenre(GetArtistByGenreRequest) returns (ArtistsList) {}
    rpc CreateArtist(CreateArtistRequest) returns (Artist) {}
    rpc UpdateArtist(UpdateArtistRequest) returns (Artist) {}
    rpc DeleteArtist(Id) returns (Empty) {}
    rpc FavoriteArtist(Id) returns (Artist) {}
    rpc UnfavoriteArtist(Id) returns (Artist) {}
    rpc FollowArtist(Id) returns (Artist) {}
    rpc UnfollowArtist(Id) returns (Artist) {}
}

message Id {
    string id = 1;
}

message Music {
    string id = 1;
    string title = 2;
    int32 durationInSeconds = 3;
    string file = 4;
    repeated string composers = 5;
    string lyrics = 6;
    string albumId = 7;
    int32 views = 8;
}

message MusicsList {
    repeated Music musics = 1;
}

message CreateMusicRequest {
    string title = 1;
    int32 durationInSeconds = 2;
    string file = 3;
    repeated string composers = 4;
    string lyrics = 5;
    string albumId = 6;
}

message UpdateMusicRequest {
    string id = 1;
    string title = 2;
    int32 durationInSeconds = 3;
    string file = 4;
    repeated string composers = 5;
    string lyrics = 6;
    string albumId = 7;
}

message Album {
    string id = 1;
    string name = 2;
    int64 releaseDate = 3;
    string cover = 4;
    string studio = 5;
    repeated string producers = 6;
    string artistId = 7;
    repeated Music tracks = 8;
}

message AlbumsList {
    repeated Album albums = 1;
}

message CreateAlbumRequest {
    string name = 1;
    int64 releaseDate = 2;
    string cover = 3;
    string studio = 4;
    repeated string producers = 5;
    string artistId = 6;
}

message UpdateAlbumRequest {
    string id = 1;
    string name = 2;
    int64 releaseDate = 3;
    string cover = 4;
    string studio = 5;
    repeated string producers = 6;
    string artistId = 7;
}

message Artist {
    string id = 1;
    string name = 2;
    string country = 3;
    int64 foundationDate = 4;
    repeated string members = 5;
    string description = 6;
    Genre genre = 7;
    repeated string photos = 8;
    string facebookUrl = 9;
    string twitterUrl = 10;
    string instagramUrl = 11;
    string wikipediaUrl = 12;
    int32 favorites = 13;
    int32 followers = 14;
    repeated Album albums = 15;
    repeated Music popularTracks = 16;
}

message ArtistsList {
    repeated Artist artists = 1;
}

message GetArtistByGenreRequest {
    Genre genre = 1;
}

message CreateArtistRequest {
    string name = 1;
    string country = 2;
    int64 foundationDate = 3;
    repeated string members = 4;
    string description = 5;
    Genre genre = 6;
    repeated string photos = 7;
    string facebookUrl = 8;
    string twitterUrl = 9;
    string instagramUrl = 10;
    string wikipediaUrl = 11;
}

message UpdateArtistRequest {
    string id = 1;
    string name = 2;
    string country = 3;
    int64 foundationDate = 4;
    repeated string members = 5;
    string description = 6;
    Genre genre = 7;
    repeated string photos = 8;
    string facebookUrl = 9;
    string twitterUrl = 10;
    string instagramUrl = 11;
    string wikipediaUrl = 12;
}

enum Genre {
    Heavy_Metal = 0;
    Folk_Metal = 1;
    Power_Metal = 2;
    Death_Metal = 3;
    Thrash_Metal = 4;
    Black_Metal = 5;
}

message Empty {}
